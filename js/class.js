// クラス


問1:クラスとは何か。まず意味をこたえ、そのうえで例を示して説明せよ。









正解1:
意味）クラス＝モノ（オブジェクト）の設計図
例）商品に「商品名がついている」「価格が設定されている」「カテゴリー別に分けられている」など、共通する特徴がある。このような「共通する特徴」を設計図にしたのがクラス。抽象性だけを抽出した設計図。具体性は引数としてクラスに付与していく感じ。

問2:クラスの構文を書け








正解2:
構文（たぶんこれが原型）
------------------------------------------------------------
class クラス名 {
  クラスの特徴
}
------------------------------------------------------------


問3:コンストラクタと何か。








正解:コンストラクタ＝クラスをもとにオブジェクトを作る（インスタンス化する）際に、処理を行う関数。


問4:初期化とは何か。








正解:初期化＝コンストラクタによって実行される最初の処理

問5:
・インスタンスとは何か
・インスタンス化とは何か
・インスタンス化する方法（構文）を書け。








正解:
・インスタンス＝クラスをもとに作られたオブジェクト（インスタンス＝オブジェクトという認識でOK）
・インスタンス化＝クラスをもとにインスタンスを作ること
・インスタンス化する方法（構文）＝new クラス名()と記述する。


問6:コンストラクタを使ってclassを書き、クラスをインスタンス化する構文を書け。








正解6:
------------------------------------------------------------
class クラス名 {
  constructor() {
    初期化の内容
  }
}

const 定数名 = new Product();
------------------------------------------------------------

問7:
「敏感肌にも優しい100%天然由来のシャンプーです。」がコンソールに出力されるクラスを書き、
そのクラスをインスタンス化せよ。










正解7:
------------------------------------------------------------
// クラスを定義する
 class Product {
   // インスタンス化すると同時に処理を実行（初期化）する
   constructor() {
     console.log('敏感肌にも優しい100%天然由来のシャンプーです。');
   }
 }
 
 // インスタンス化する
 const shampoo = new Product();
------------------------------------------------------------


問8:コンストラクタでプロパティを持たせる（引数なしバージョン）

1.Productクラスに要素・プロパティ{ name: 'シャンプー', price: 500, category: '生活雑貨' }を持たせるコードを書け。さらに、Productクラスをインスタンス化し、コンソールに出力するコードも書け。
 ※コンストラクタ、thisを使う。
------------------------------------------------------------
class Product {
 クラスの特徴
}
------------------------------------------------------------

2.（↑）1から導き出される結論を書け。
3.（↑）1で書いたthisについて説明せよ。








正解8:
1.
------------------------------------------------------------
class Product {
  constructor() {
    this.name = 'シャンプー';
    this.price = 500;
    this.category = '生活雑貨';
  }
}

// インスタンス化する
Const定数 = new Product();

// インスタンス（オブジェクト）の値を出力する
console.log(定数);
------------------------------------------------------------

2. 結論＝オブジェクトは、クラスを基につくられるので、コンストラクタを使って、要素・プロパティ（キーと値のセット）を持つことができる。

3. thisについて。
thisは、後でインスタンス化されるオブジェクト自身を意味する。クラス（という設計図）を作っている時点ではオブジェクト名はまだ決まっていないから、thisと書くことで、これから決まるどのようなオブジェクト名にも対応できるようにしている、と考えておく。


問9:
シャンプーとコーヒーなど複数の、商品名・価格・カテゴリをインスタンス（オブジェクト）化したい場合、（↑問8）のコードをどう書き換えればいいか？最初に方法を説明し、コードを書け。








正解9:
説明＝クラスのプロパティを抽象化し、シャンプーとコーヒーの商品名・価格・カテゴリを具体化して引数とし、クラスに渡す。

コード:
------------------------------------------------------------
class Product {
  constructor(name, price, category) {  
    this.name = name;           //←抽象化
    this.price = price;         //←抽象化
    this.category = category;  //←抽象化
  }
}

//インスタンス化すると共に具体的な商品名・価格・カテゴリの値を引数としてクラスに渡す
//インスタンス（オブジェクト）名はshampoo、coffeeってことになる
const shampoo = new Product('シャンプー', 500, '生活雑貨');  
const coffee = new Product('コーヒー', 1500, '飲料');

//インスタンスを出力。インスタンス（オブジェクト）名はshampoo、coffeeをコンソールの引数に渡す
console.log(shampoo);
console.log(coffee);
------------------------------------------------------------


問10:
1.オブジェクト内に、値に加えて、関数を持たせる構文を書け。

2.(↑1)の構文の使用ケースを、例を挙げて説明せよ。

3.(↑1と2）を踏まえて、例文の〇〇箇所にコードを書け。
例文:
------------------------------------------------------------
// クラスを定義する
class Product {
  // コンストラクタを使ってインスタンス化するときに初期化する
  constructor(name, price, category) {
    // インスタンス（オブジェクト）にプロパティを持たせる
    this.name = name;
    this.price = price;
    this.category = category;
  }

// ココにメソッドを定義!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇

// インスタンス化する
const shampoo = new Product('シャンプー', 500, '生活雑貨');
const coffee = new Product('コーヒー', 1500, '飲料');

// インスタンス（オブジェクト）の値を出力する
console.log(shampoo);
console.log(coffee);

// ココにメソッドを呼び出す（実行する）!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇〇
------------------------------------------------------------

4.(↑1の)構文・3の例文の趣旨を説明せよ。








正解10
1.構文:
------------------------------------------------------------
class Product {
  constructor() {
    初期化の内容
  }
  
  // メソッドを定義する
  メソッド名() {
    一連の処理
  }
}
------------------------------------------------------------
2. 例:商品を出品したあと、特定の商品の個別ページにだけ説明文を表示したい、というように、任意のタイミングで、任意の商品に処理を行いたい場合

3.〇〇箇所にコード
------------------------------------------------------------
// クラスを定義する
class Product {
  // コンストラクタを使ってインスタンス化するときに初期化する
  constructor(name, price, category) {
    // インスタンス（オブジェクト）にプロパティを持たせる
    this.name = name;
    this.price = price;
    this.category = category;
  }

// メソッドを定義する
+  describe() {
+    console.log('この商品名は' + this.name + 'です。');
+  }
}

// インスタンス化する
const shampoo = new Product('シャンプー', 500, '生活雑貨');
const coffee = new Product('コーヒー', 1500, '飲料');

// インスタンス（オブジェクト）の値を出力する
console.log(shampoo);
console.log(coffee);

+// メソッドを呼び出す（実行する）
+shampoo.describe();
------------------------------------------------------------

4.
オブジェクト内に、値に加えて、関数を持たせ、任意のタイミングで、任意の商品のインスタンス（オブジェクト）を呼びだす際に、関数も呼び出す。任意でない商品は、インスタンスだけ呼び出し、関数は呼び出さない。


問11:
通常のオブジェクトにメソッドを定義する構文と、例文を書け。








正解11:
構文:
------------------------------------------------------------
const 定数名 = {
  キー名（メソッド名） : () => {
    一連の処理
  }
}

//メソッドを呼び出す
オブジェクト名.メソッド名;
------------------------------------------------------------

例文:
------------------------------------------------------------
// 通常のオブジェクトにメソッドを定義する
 const user = {
   name: '侍太郎',
   age: 36,
   gender: '男性',
   greet: () => {
     console.log('よろしくお願いします！');
   }
 }
 
 // メソッドを呼び出す（実行する）
 user.greet();
------------------------------------------------------------
