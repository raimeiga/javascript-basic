問1:関数とは何かを説明し、その利点を3つ挙げよ。

正解1:
関数を使う＝一連の処理を関数として定義し、コード上の任意の場所で呼び出せる仕組み
・複雑なコードを1つにまとめられる
・同じ処理を行うときに何度でも再利用できる
・素早い開発ができる



問2:関数について。
1.関数のつくり方を説明せよ。
2.構文を２つ書け。
3.関数名のつけ方をいえ。


正解2:
1.つくり方＝JavaScriptにおける関数は、関数自体を変数や定数に代入して使う
　　　　　　※関数を再代入するケースはほとんどないため、一般的には定数に代入する

2.構文:
・アロー関数
------------------------------------------------------------
const 定数名 = () => {
  一連の処理  
}

// 関数の呼び出し方（↓関数名ってのは、定数名のことだと思っていいだろ。）
関数名()
------------------------------------------------------------

・アロー関数以外の記法（関数宣言という。古い書き方らしい。）
------------------------------------------------------------
function 関数名() {
  一連の処理
}

// 関数の呼び出し方
関数名();
------------------------------------------------------------


3.関数名のつけ方＝動詞＋目的語」の形をとることが多い
　例）addProduct（商品を追加する）


問3:次の3つの挨拶を出力する関数（関数名:sayGoodMorning ）を書き、呼び出せ。
「おはようございます！」
「昨日はよく眠れましたか？」
「今日も一日頑張りましょう！」


正解3:
------------------------------------------------------------
// 朝のあいさつを出力する関数を定義する
 const sayGoodMorning = () => {
   console.log('おはようございます！');
   console.log('昨日はよく眠れましたか？');
   console.log('今日も一日頑張りましょう！');
 }


// 朝のあいさつを出力する関数を呼び出す
sayGoodMorning();
------------------------------------------------------------





問4:引数について。
1.引数とは何か。
2.引数の使用ケースを、例を挙げて説明せよ。

3.購入金額に、500円の送料を加算する関数をつくり、
　購入金額1200円の関数を呼び出せ。
　
4.購入金額に、地域ごとに異なる送料を加算する関数をつくり、
　例として購入金額1200円に、送料500円を加算し、関数を呼び出せ。

正解4:
1.引数（ひきすう）＝関数に与えるデータ


2.使用ケース:
朝のあいさつを出力するだけの関数なら、決まった処理を行うだけなので引数は
必要ないが、不確定な値を使って処理を行いたいときには引数が必要。


3.与えられた引数priceに送料を加算し、その値を出力する
・500円の送料がかかる　⇒確定（共通）要素なので、関数として定義してしまう。
・1200円の購入金額　⇒　不確定要素なので何等かの変数名にした上で、引数として設定。
------------------------------------------------------------
const calculateTotal = (price) => {
  
  console.log(price + 500 + '円');
}

calculateTotal(1200);
------------------------------------------------------------


4.与えられた引数priceと引数shippingFeeを加算し、その値を出力する
------------------------------------------------------------
const addTwoArguments = (price, shippingFee) => {
  
  console.log(price + shippingFee + '円');
}

// 関数を呼び出し、引数として購入金額と送料を渡す
addTwoArguments(1200, 500);
------------------------------------------------------------


問5:
1.関数の内部で処理した結果は、その後どのように活用できるか？
2.またその活用方法をいえ。
3.正解にある２つのコードの意味を確認せよ。

正解5:
1.関数の内部で処理した結果は、戻り値として返すことができる。
  戻り値を返さなければ関数だけで処理が終わるが、戻り値を返すことで、それを他のコードに活用する場合もある。

2.方法:戻り値として返す要素の前にreturnを記述する。

3.
------------------------------------------------------------
// 戻り値を返す関数を定義する
const isPurchased = () => {
  if (商品が購入されているならば) {
    return true;
  }
  else {
    return false;
  }
}

// 戻り値を返す関数を条件式に使う（trueであれば処理が実行される）
if (isPurchased()) {
  console.log('商品は購入済みです。');
}
------------------------------------------------------------

もう１つ↓
------------------------------------------------------------
// 与えられた引数numを2倍にし、その値を戻り値として返す関数を定義する
 const double = (num) => {
   return num * 2;
 }
 
 // 関数の戻り値を出力する
 console.log(double(30));
------------------------------------------------------------




//スコープについて


問6:ココで定数userNameを使えるか？に答えろ。
    判断基準も示せ。
------------------------------------------------------------
const userName = '侍太郎'
  const useVariable =()=> {

  // ココで定数userNameを使えるか？

 }

// ココで定数userNameを使えるか？
------------------------------------------------------------



正解6:関数useVariable{   }の外で定義した定数const userNameは、
      関数useVariableの中でも、外でも使える。
基準:{   }の外で定義した定数は、{   }の外はもちろん、{   }の中でも使える。
------------------------------------------------------------
const userName = '侍太郎'
  const useVariable =()=> {

  // ココで定数userNameを使える！！！

 }

// ココで定数userNameを使える！！！
------------------------------------------------------------

問7:ココで定数userNameを使えるか？に答えろ。
------------------------------------------------------------
const useVariable =()=> {
  const userName = '侍太郎'

  // ココで定数userNameを使えるか？

 }

// ココで定数userNameを使えるか？
------------------------------------------------------------


正解7:関数useVariableの中{   }で定義した定数const userNameは、
      関数useVariableの中でしか使えない。
------------------------------------------------------------
const useVariable =()=> {
  const userName = '侍太郎'

  // ココで定数userNameを使える！！！

 }

// ココで定数userNameを使えないよ～
------------------------------------------------------------



問8:ココで定数userNameを使えるか？に答えろ。
------------------------------------------------------------
if（条件式）{
  const userName = '侍太郎'

  // ココで定数userNameを使えるか？

 }

// ココで定数userNameを使えるか？
------------------------------------------------------------


正解8:if文の処理{    }の中で定義した定数const userNameは、
      {    }の中でしか使えない。
------------------------------------------------------------
if（条件式）{
  const userName = '侍太郎'

  // ココで定数userNameを使える！！！

 }

// ココで定数userNameを使えないよ～
------------------------------------------------------------





問9:ココで定数userNameを使えるか？に答えろ。
------------------------------------------------------------
while（条件式）{
  const userName = '侍太郎'

  // ココで定数userNameを使えるか？

 }

// ココで定数userNameを使えるか？
------------------------------------------------------------


正解9:while文の処理{    }の中で定義した定数const userNameは、
      {    }の中でしか使えない。
------------------------------------------------------------
while（条件式）{
  const userName = '侍太郎'

  // ココで定数userNameを使える！！！

 }

// ココで定数userNameを使えないよ～
------------------------------------------------------------



//--------------------------------------------------------------------
// 朝のあいさつを出力する関数を定義する
// const sayGoodMorning = () => {
//     console.log('おはようございます！');
//     console.log('昨日はよく眠れましたか？');
//     console.log('今日も一日頑張りましょう！');
// }

// // 夜のあいさつを出力する関数を定義する
// const sayGoodEvening = () => {
//     console.log('こんばんは！');
//     console.log('今日も一日お疲れさまでした。！');
// }

// // 朝のあいさつを出力する関数を呼び出す
// sayGoodMorning();

// // 夜のあいさつを出力する関数を呼び出す
// sayGoodEvening();


// // 与えられた引数priceに送料を加算し、その値を出力する関数を定義する
// const caluculateTotal = (price) => {
//     console.log(price + 500 + '円');
// }

// // 関数を呼び出し、引数として購入金額を渡す
// caluculateTotal(1200);

// const addTwoArguments = (price, shippingFee) => {
//     console.log(price + shippingFee + '円');
// }

// // 関数を呼び出し、引数として購入金額を渡す
// addTwoArguments(1200, 500);

// // 与えられた引数numを2倍にし、その値を戻り値として返す関数を定義する
// const double = (num) => {
//     return num * 2;
//   }
  
//   // 関数の戻り値を出力する
//   console.log(double(30));


// // 関数の中で定数を宣言し、関数の中で定数を使う
// const useVariable = () => {
//     const userName = '侍太郎'
//     console.log(userName);
//   }
  
//   // 関数を呼び出す
//   useVariable();

//   // 関数の中で宣言した定数を関数の外で使う
//  console.log(userName);
  